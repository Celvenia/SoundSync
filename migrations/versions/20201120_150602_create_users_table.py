"""create_users_table

Revision ID: ffdc0a98111c
Revises:
Create Date: 2020-11-20 15:06:02.230689

"""
from alembic import op
import sqlalchemy as sa

from datetime import datetime
import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = 'ffdc0a98111c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('username', sa.String(
                        length=40), nullable=False),
                    sa.Column('email', sa.String(length=255), nullable=False),
                    sa.Column('hashed_password', sa.String(
                        length=255), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('username')
                    )

    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")

    op.create_table('playlists',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('creator_id', sa.Integer, nullable=False),
                    sa.Column('title', sa.String(length=255), nullable=False),
                    sa.Column('created_at', sa.DateTime(),
                              default=datetime.now),
                    sa.Column('updated_at', sa.DateTime(),
                              default=datetime.now, onupdate=datetime.now),
                    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE playlists SET SCHEMA {SCHEMA};")

    op.create_table('playlist_items',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('playlist_id', sa.Integer, nullable=False),
                    sa.Column('title', sa.String(length=255), nullable=False),
                    sa.Column('artist', sa.String(length=255), nullable=False),
                    sa.Column('album_url', sa.String(
                        length=255), nullable=False),
                    sa.Column('uri', sa.String(length=255), nullable=False),
                    sa.ForeignKeyConstraint(['playlist_id'], ['playlists.id'], ondelete='CASCADE', onupdate='CASCADE'),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE playlist_items SET SCHEMA {SCHEMA};")

    op.create_table('user_follows',
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('followed_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['followed_id'], ['users.id'], ondelete='CASCADE', onupdate='CASCADE'),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], ondelete='CASCADE', onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('follower_id', 'followed_id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE user_follows SET SCHEMA {SCHEMA};")

    op.create_table('playlist_likes',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('playlist_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlists.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE', onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'playlist_id')
    )
    if environment == "production":
        op.execute(f"ALTER TABLE playlist_likes SET SCHEMA {SCHEMA};")
    


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_table('playlist_likes')
    op.drop_table('user_follows')
    op.drop_table('playlist_items')
    op.drop_table('playlists')
    op.drop_table('users')
    # ### end Alembic commands ###
